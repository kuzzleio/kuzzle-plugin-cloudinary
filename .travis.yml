env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
    # AWS_SECRET_ACCESS_KEY
    - secure: "zbU841dFF3TOn7WxibBu/Xz3jCDEWTlO8c9OSC9uwgYiTkrflzwdr4Wnp9oXY29iLffMY1wN3eXVJigkfcW6B/QTiPzn5CxiHbp6IkMYFGqhKVcsnNOhcfXlY7GuzA39NGCg8jzok+rLTy19xzDNTs264b4AW8RESJLU2JVsRfx8p4A0kcdowxSEp23soZ6nOiomA2v3IKNms6siihoAW0ycl2wdG1UW0jK/3P84sJRQXbZRJBzxbfTNg4k9PKzyq0m/XvbywjsnF7RYnYaYyJKq6WuDexO+5aW1zSg4VwNlhWNm9Q2MwyFLNc1HfWu9C5s38wVEJyg2f4ibSpPgaBtIVyMVnqMAAAKc5ag1VqDKdAmSTsRdjwl8iPe+ViU79eQjgRI77YfsIoSOUyEzBfasn7sxG01RXesHmMG/PmOWrX/CSG963qbKj8Yh9qahfP+Cl16A6g7V5KgAfhINGbenp/dA2jIhZGzauoTXby0RYM0wXHb+tObTqs4NnymvGUFBsO9ag+mt6X/vndztCdjrvqtEjH2WbN+CIFul8LejaBJHvheaiN45yqrb44QmpQkOF8CteYPTBXwXQi97r/lf9cRdmNxfSZHeQfqSMNZrgfDzaQizSWiQG72xhWMwBhC7Pt7wNtx0aELgByBQwnZmYLVizdfS6ChFm6Khoec="

jobs:
  include:
    # - stage: Tests
    #   name: Linting
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js: 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run lint

    # - stage: Tests
    #   name: Unit tests - Node.js 6
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 6
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing

    # - stage: Tests
    #   name: Unit tests - Node.js 8
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Unit tests - Node.js 10
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 10
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Dead link check
    #   if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/ OR type = cron

    #   before_script:
    #     - npm run doc-prepare
    #     - npm run --prefix doc/framework clone-repos
    #   script:
    #     - gem install typhoeus
    #     - HYDRA_MAX_CONCURRENCY=20 npm run --prefix doc/framework dead-links



    - stage: Deployment Doc Dev
      name: Deploy next-docs.kuzzle.io
      if: branch = 1-dev
      language: node_js
      node_js: 10
      env:
        - NODE_ENV=production
        - S3_BUCKET=docs-next.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
        - AWS_DEFAULT_REGION=us-west-2

      addons:
        apt:
          packages:
            - python
            - python-pip

      install:
        - bash test-env.sh
        - pip install awscli --upgrade --user

      script:
        - if [ -z $AWS_SECRET_ACCESS_KEY ]; then exit 1; fi
        - npm run doc-prepare
        - npm run doc-build

      deploy:
        provider: script
        script:
          - npm run doc-upload
        skip_cleanup: true
        on:
          branch: 1-dev

      after_deploy:
        - npm run doc-cloudfront

    # - stage: Deployment Doc Prod
    #   name: Deploy docs.kuzzle.io
    #   if: branch = master
    #   language: node_js
    #   node_js: 10
    #   env:
    #     - NODE_ENV=production
        # - S3_BUCKET=docs.kuzzle.io
        # - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
        # - AWS_DEFAULT_REGION=us-west-2

    #   addons:
    #     apt:
    #       packages:
    #         - python
    #         - python-pip

    #   install:
    #     - pip install awscli --upgrade --user

    #   script:
    #     - npm run doc-prepare
    #     - npm run doc-build

    #   deploy:
    #     provider: script
    #     script:
    #       - npm run doc-upload
    #     skip_cleanup: true
    #     on:
    #       branch: master

    #   after_deploy:
    #     - npm run doc-cloudfront
