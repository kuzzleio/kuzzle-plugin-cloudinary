env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
    # AWS_SECRET_ACCESS_KEY
    - secure: "Dtb+o3J6iAfh4JzmWIcdff1jdICijfEAE2XLJBTJMBHDv+aIuQXA6hnO05spcYaeagcBiNfbUX7/cPhulEx5gVS09zYj4sRN5Omz6EHyjinBUP2G61UOWy5BLoSFdMHhuvTSCCTab0tfMgiefcRavJx3TJXxbxjRnClbXSetD1imOCe2ABnaWrDq44J7FVRWMvvN4ZjKLbeQNhRr1MgDBlO9/pA0p3ShkZkFPJzweVKAPUVtlEYjcRG7lzv3xMBUeJ1ZQq+fP7na5uLVl2vWqBfW5EULSu0d+CFkJukR6oYQG1Jl2jyF1X8RouAcshbSXZmiDzOoQ5chP8FT6ybOjl2vkrB3tcpJfB/zVgrekAhvYilcjt1y5USL4gh9F3CKxEF7Hd+Ulrw9W2yOl8ZgmSFwh8t1pgR6YMjbb+cUfaQIZXSRxVfzNpc8HhU2s7pcPhh9Xb/qmsYL+/kOzrk8C96mxEZmxKZljtToTpq3liwS0fXVzHZ66Pu+bVB3Mtg2sU49cqymxgWhu3FK4LX68QKqKyLDpc+/n+uqTRwaAz7ZyIxhLC6BwzRbGUVyczFPz6G95ORQG0xcdjvvXMmOq3RtyizN6Y289FdB0+LgPuYwD8LVrTrb3/tcXpztabbquwYbtfw7/eMf6JCOUhXYMpD721SoN+oTuu50YdmkY2o="

jobs:
  include:
    # - stage: Tests
    #   name: Linting
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js: 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run lint

    # - stage: Tests
    #   name: Unit tests - Node.js 6
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 6
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing

    # - stage: Tests
    #   name: Unit tests - Node.js 8
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Unit tests - Node.js 10
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 10
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Dead link check
    #   if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/ OR type = cron

    #   before_script:
    #     - npm run doc-prepare
    #     - npm run --prefix doc/framework clone-repos
    #   script:
    #     - gem install typhoeus
    #     - HYDRA_MAX_CONCURRENCY=20 npm run --prefix doc/framework dead-links



    - stage: Deployment Doc Dev
      name: Deploy next-docs.kuzzle.io
      if: branch = 1-dev
      language: node_js
      node_js: 10
      env:
        - NODE_ENV=production
        - S3_BUCKET=docs-next.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
        - AWS_DEFAULT_REGION=us-west-2

      addons:
        apt:
          packages:
            - python
            - python-pip

      install:
        - bash test-env.sh
        - pip install awscli --upgrade --user

      script:
        - if [ -z $AWS_SECRET_ACCESS_KEY ]; then exit 1; fi
        - npm run doc-prepare
        - npm run doc-build

      deploy:
        provider: script
        script:
          - npm run doc-upload
        skip_cleanup: true
        on:
          branch: 1-dev

      after_deploy:
        - npm run doc-cloudfront

    # - stage: Deployment Doc Prod
    #   name: Deploy docs.kuzzle.io
    #   if: branch = master
    #   language: node_js
    #   node_js: 10
    #   env:
    #     - NODE_ENV=production
        # - S3_BUCKET=docs.kuzzle.io
        # - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
        # - AWS_DEFAULT_REGION=us-west-2

    #   addons:
    #     apt:
    #       packages:
    #         - python
    #         - python-pip

    #   install:
    #     - pip install awscli --upgrade --user

    #   script:
    #     - npm run doc-prepare
    #     - npm run doc-build

    #   deploy:
    #     provider: script
    #     script:
    #       - npm run doc-upload
    #     skip_cleanup: true
    #     on:
    #       branch: master

    #   after_deploy:
    #     - npm run doc-cloudfront
