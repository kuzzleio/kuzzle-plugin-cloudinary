env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
    # AWS_SECRET_ACCESS_KEY
    - secure: "pvMjomj4EqqfUeH0HjMipN7yE9vgksdq/zq/IgDzqv+foEyGwCqjWZiimvSXSAdTAELuAfLG1bxf6192C31zYn6tWvcrJLeFqEOvpByiK6Hiv5Geio323oI8vkKH/a3RK5cUpvJYk+CvX3HUtZtLpyNb4sNExMf0AqYpFE8mp9VlmOPOL6xRWoaK8a0g3aSxB5nwLRpTYA+nRaL+Iqr8+fOltAHcKUbOXMDw6axGTvJEYvMd4Il5rdZZ0CFnDJHypAf4viQQb68eQb8dj1ZXBKAEH7sgSJ+O/q0lNpvFAD4Yf8sCbrtChLRt+ie4427s8dxMVxCNB5pWNB5nSlQXV9eQpUIqmOepM/08WhMagPKoMh8XIHYC0+tkuSEYUgMa/dZ7ctddiuHuBpxSKRpP2p3OEbK5+bo/RR/TsjTn8EWh9VIv+JFcge3ppRaNwfILqgOal8QmNY4FxXW3H0IKpl/YCqZPLA9458m6FkDVW97V5eW2SFWjcm5pNVboMRkqt3c13RvHQGUNKA1c30cZr6DZ+6y8qkQHo5yTVPm9nlH/2jTSor/Y1EjqWdXV6uoiOJxcAg6SCsXpDAYRYOm0xxzXwnERRllzAXsT4V50FbmjJlveq9zXwNAMmfQYi41cRByvyh0LcawDIO/jOQqUahhh6NR/8wIK+wB1N4Qop94="

jobs:
  include:
    # - stage: Tests
    #   name: Linting
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js: 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run lint

    # - stage: Tests
    #   name: Unit tests - Node.js 6
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 6
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing

    # - stage: Tests
    #   name: Unit tests - Node.js 8
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 8
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Unit tests - Node.js 10
    #   os: linux
    #   sudo: required
    #   language: node_js
    #   node_js:
    #     - 10
    #   cache: npm
    #   install:
    #     - npm install --silent
    #   script:
    #     - npm run unit-testing
    #   after_script:
    #     - npm run codecov

    # - stage: Tests
    #   name: Dead link check
    #   if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/ OR type = cron

    #   before_script:
    #     - npm run doc-prepare
    #     - npm run --prefix doc/framework clone-repos
    #   script:
    #     - gem install typhoeus
    #     - HYDRA_MAX_CONCURRENCY=20 npm run --prefix doc/framework dead-links



    - stage: Deployment Doc Dev
      name: Deploy next-docs.kuzzle.io
      if: branch = 1-dev
      language: node_js
      node_js: 10
      env:
        - NODE_ENV=production
        - S3_BUCKET=docs-next.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
        - AWS_DEFAULT_REGION=us-west-2

      addons:
        apt:
          packages:
            - python
            - python-pip

      install:
        - bash test-env.sh
        - pip install awscli --upgrade --user

      script:
        - if [ -z $AWS_SECRET_ACCESS_KEY ]; then exit 1; fi
        - npm run doc-prepare
        - npm run doc-build

      deploy:
        provider: script
        script:
          - npm run doc-upload
        skip_cleanup: true
        on:
          branch: 1-dev

      after_deploy:
        - npm run doc-cloudfront

    # - stage: Deployment Doc Prod
    #   name: Deploy docs.kuzzle.io
    #   if: branch = master
    #   language: node_js
    #   node_js: 10
    #   env:
    #     - NODE_ENV=production
        # - S3_BUCKET=docs.kuzzle.io
        # - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
        # - AWS_DEFAULT_REGION=us-west-2

    #   addons:
    #     apt:
    #       packages:
    #         - python
    #         - python-pip

    #   install:
    #     - pip install awscli --upgrade --user

    #   script:
    #     - npm run doc-prepare
    #     - npm run doc-build

    #   deploy:
    #     provider: script
    #     script:
    #       - npm run doc-upload
    #     skip_cleanup: true
    #     on:
    #       branch: master

    #   after_deploy:
    #     - npm run doc-cloudfront
